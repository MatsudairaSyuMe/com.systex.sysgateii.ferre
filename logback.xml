<?xml version="1.0" encoding="UTF-8"?>
<!-- scan:當此屬性設置為true時，配置文件如果發生改變，將會被重新讀取，預設值為true。
     scanPeriod:設置監測配置文件是否有修改的時間間隔，如果沒有給出時間單位，預設單位是毫秒。
     當scan為true時，此屬性生效。預設的時間間隔為1分鐘。
     debug:當此屬性設置為true時，將列印出logback內部日誌訊息，實時查看logback運行狀態。預設值為false。 -->
<configuration scan="true" scanPeriod="60 seconds" debug="false">
	<property name="encoding" value="UTF-8" scope="context" />
	<property name="maxSize" value="30MB" scope="context"/>
	<!-- 上下文變數設置,用來定義變數值,其中name的值是變數的名稱，value的值時變數定義的值。
	通過<property>定義的值會被插入到logger上下文中。定義變數後，可以使“${}”來使用變數。 -->
	<property name="CONTEXT_NAME" value="sysgateii-test" />
	<property name="FAS_NAME" value="fas" />
	<property name="RATE_NAME" value="rate" />
	<property name="logs.dir" value="/home/scotthong/tmp" />
	<property name="telegrampattern" value="%d{yyyy/MM/dd HH:mm:ss.SSS} L%X{LOCAL_ADDRESS}:%X{LOCAL_PORT}-R%X{SERVER_ADDRESS}:%X{SERVER_PORT} - %msg%n" scope="context"/>
	<!--<timestamp key="byDate" datePattern="yyyyMMdd" />-->
	<!--<timestamp key="bySecond" datePattern="yyyyMMdd.HHmmss" />-->
	<!-- 上下文名稱：<contextName>, 每個logger都關聯到logger上下文， 預設上下文名稱為"default"。
	但可以使用<contextName>設置成其他名字，用於區分不同應用程序的記錄。一旦設置，不能修改。 -->
	<contextName>${CONTEXT_NAME}</contextName>

	<!-- <appender>是<configuration>的子節點，是負責寫日誌的組件。有兩個必要屬性name和class。name指定appender名稱，
	class指定appender的實現類。 -->
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<!-- 對日誌進行格式化。 -->
		<encoder>
			<pattern>
				%d{yyyy-MM-dd HH:mm:ss.SSS}|%level|%class{30}|%thread|%method|%line|%msg%n
			</pattern>
			<charset>${encoding}</charset>
		</encoder>
	</appender>

    <appender name="file"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <Append>true</Append>
        <file>${logs.dir}/${CONTEXT_NAME}-${log.name}.log</file>
        <filter class = "ch.qos.logback.classic.filter.ThresholdFilter" >
        		<level>DEBUG</level>
        </filter>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
		    <fileNamePattern>/${logs.dir}/archive/${CONTEXT_NAME}-${log.name}.%d{yyyy-MM-dd}.%i.log.zip</fileNamePattern>
		    <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
		    	<maxFileSize>${maxSize}</maxFileSize>
		    </timeBasedFileNamingAndTriggeringPolicy>
  			<maxHistory>3</maxHistory>	
			<cleanHistoryOnStart>true</cleanHistoryOnStart>
		</rollingPolicy>
        <encoder>
        		<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS}|%level|%class{30}|%thread|%method|%line|%msg%n</pattern>
        	<charset>${encoding}</charset>
        </encoder>
     </appender>

    <appender name="FAS_LOG"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <Append>true</Append>
        <file>${logs.dir}/${FAS_NAME}.log</file>
        <filter class = "ch.qos.logback.classic.filter.ThresholdFilter" >
        		<level>DEBUG</level>
        </filter>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
		    <fileNamePattern>/${logs.dir}/archive/${FAS_NAME}.%d{yyyy-MM-dd}.%i.log.zip</fileNamePattern>
		    <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
		    	<maxFileSize>${maxSize}</maxFileSize>
		    </timeBasedFileNamingAndTriggeringPolicy>
  			<maxHistory>3</maxHistory>	
			<cleanHistoryOnStart>true</cleanHistoryOnStart>
		</rollingPolicy>
        <encoder>
        		<pattern>${telegrampattern}</pattern>
        	<charset>${encoding}</charset>
        </encoder>
    </appender>
    <appender name="RATE_LOG"
              class="ch.qos.logback.core.ConsoleAppender">
        <Append>true</Append>
        <file>${logs.dir}/${RATE_NAME}.log</file>
        <filter class = "ch.qos.logback.classic.filter.ThresholdFilter" >
        		<level>DEBUG</level>
        </filter>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
		    <fileNamePattern>/${logs.dir}/archive/${RATE_NAME}.%d{yyyy-MM-dd}.%i.log.zip</fileNamePattern>
		    <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
		    	<maxFileSize>${maxSize}</maxFileSize>
		    </timeBasedFileNamingAndTriggeringPolicy>
  			<maxHistory>3</maxHistory>	
			<cleanHistoryOnStart>true</cleanHistoryOnStart>
		</rollingPolicy>
        <encoder>
        		<pattern>${telegrampattern}</pattern>
        	<charset>${encoding}</charset>
        </encoder>
    </appender>

	<!-- 特殊的<logger>元素，是根logger。只有一個level屬性，應為已經被命名為"root". level:設置列印級別，大小寫無關：TRACE, 
		DEBUG, INFO, WARN, ERROR, ALL 和 OFF，不能設置為INHERITED或者同義詞NULL。預設是DEBUG。
		<root>可以包含零個或多個<appender-ref>元素，標識這個appender將會添加到這個loger。 -->
	<root>
		<level value="DEBUG" />
		<appender-ref ref="stdout" />
		<appender-ref ref="file" />
	</root>

	<!-- 用來設置某一個package或者具體的某一個類的日誌列印級別、以及指定<appender>,name:
			用來指定受此logger約束的某一個package或者具體的某一個class。
		level:用來設置列印級別，大小寫無關：TRACE, DEBUG, INFO, WARN, ERROR, ALL 和 OFF，
			還有一個特殊值INHERITED或者同義詞NULL，代表強制執行上級的級別。
			如果未設置此屬性，那麼當前loger將會繼承上級的級別。
		additivity:是否向上級logger傳遞列印訊息。預設是true。(這個logger的上級就是上面的root)
	<logger>可以包含零個或多個<appender-ref>元素，標識這個appender將會添加到這個logger。 -->
<!--	<logger name=sysgateii-test level="DEBUG" additivity="true"></logger>-->
    <logger name="com.systex" additivity="false" level="debug">
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="file"/>
    </logger> 

    <logger name="faslog" level="debug" additivity="false">
        <appender-ref ref="FAS_LOG"/>
    </logger>
    <logger name="ratelog" level="debug" additivity="false">
        <appender-ref ref="RATE_LOG"/>
    </logger>

</configuration>
